'number' + 3 + 3
// Коли рядок додаєтся до числа, то число конвертується до рядка і виходить рядок number3,
// по такому ж принципу number3+3 буде number33. Відповідь number33

null + 3
// Даний вираз конвертується в 0 + 3 = 3

5 && "qwerty"
//Оператор && повертає перше або останнє логічне значення false. Так як 5 не є false, то результатом буде qwerty

+'40' + +'2' + "hillel";
//Оператор + конвертує рядки у числа, тому "40" стає 40, а "2" стає 2. Тому 40+2=42
//Число 42 конвертується до рядка "hillel" і буде рядок "42hillel"

'10' - 5 === 6;
//Рядок "10" конвертується в число 10 від якого віднімається 5. Далі порівнюються числа 5 === 6.
//Це невірно, тому відповідь false

true + false
// true конвертується в 1, а false в 0 => 1 + 0 = 1

'4px' - 3
// Рядок "4px" не може конвертуватися в число, тому це буде Nan

'4' - 3
// Рядок "4" конвертується в число 4 => 4 - 3 = 1

'6' + 3 ** 0;
// Оператор ** підносить число 3 до степеня 0, результатом буде число 1, яке конвертується в рядок "1"
// Рядки "6" + "1" = рядок "61"

12 / '6'
//Рядок "6" конвертується в число 6 => 12 / 6 = 2

'10' + (5 === 6);
//Вираз (5 === 6) перевіряє рівність. Це невірно, тому false
//false конвертується до рядка => "10false"

null == ''
//null це не порожній рядок, тому відповідь false

3 ** (9 / 3);
// Спочатку 9 / 3 = 3  Далі 3 в степені 3 = 27

!!'false' == !!'true'
//Рядок "false" це true. Оператор ! перетворює true на false. Оператор ! перетворює false на true.
//Отже, !!'false' буде true
//Рядок "true" це також true.  Оператор ! перетворює true на false. Оператор ! перетворює false на true.
//Отже, !!'true' буде true
//Тому true == true буде true

0 || '0' && 1//
//Спочатку виконується оператор &&, оскільки він має вищий пріоритет
//"0" та 1 істинні, тому оператор повертає останній операнд - 1
//Далі 0 || 1, 0 є хибним значенням, тому оператор || повертає перше істинне значення - 1
//Відповідь - 1

(+null == false) < 1;
//+null = 0
// 0 == 0 це буде true
// true < 1, true перетворюється на 1 і це буде 1 < 1 що буде false

false && true || true
//Спочатку виконується оператор &&, оскільки він має вищий пріоритет
//false && true = false тому що перший операнд хибний
//Далі false || true. Оператор || повертає перший істонний або останній, якщо всі хибні
//Оскільки true є істинним значенням, то відповідь буде true

false && (false || true);
//false || true перетворюється на true, далі виконується false && true і в результаті залишається false


(+null == false) < 1 ** 5;
//+null = 0, 0 рівне false, тому вираз в дужках буде true. Далі true перетворюється на 1, а 1 в 5 степені буде 1
//Тому 1 < 1 це false